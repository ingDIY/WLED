name: compile ingDIY WLED

on:
    workflow_dispatch:
    push:
      branches:
      - master
      - release/*

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Display triggering branch
      run: |
        echo "Workflow triggered by branch: ${{ github.ref_name }}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Set up Node.js
      uses: actions/setup-node@v4

    - name: Download WLED Base Repository
      run: |
        rm -rf /tmp/WLEDtemp/* || true
        mkdir -p /tmp/WLEDtemp
        wget https://github.com/Aircoookie/WLED/archive/refs/heads/main.zip -O /tmp/WLEDtemp/mm.zip
        unzip /tmp/WLEDtemp/mm.zip -d /tmp/WLEDtemp
        find /tmp/WLEDtemp -maxdepth 1 -mindepth 1 -name "*" -type d >> /tmp/WLEDtemp/wledfoldername

    - name: Replace PlatformIO Configs
      run: |
        cp ./platformio.ini `cat /tmp/WLEDtemp/wledfoldername`
        cp ./platformio_override.ini `cat /tmp/WLEDtemp/wledfoldername`

    - name: Install Dependencies
      run: |
        cd `cat /tmp/WLEDtemp/wledfoldername`
        npm install

    - name: Build All with PlatformIO
      run: |
        cd `cat /tmp/WLEDtemp/wledfoldername`
        platformio run

    - name: Copy Files
      run: |
        cd $GITHUB_WORKSPACE
        WLEDFOLDERNAME=`cat /tmp/WLEDtemp/wledfoldername`
        cp ${WLEDFOLDERNAME}/build_output/release/* $GITHUB_WORKSPACE/_flashing/

    - name: Create utility files
      run: |
        date '+%Y/%m/%d%t%T' >$GITHUB_WORKSPACE/_flashing/last_build_date.txt

    - name: Commit Files
      if: github.ref_name == 'master'
      run: |
        cd $GITHUB_WORKSPACE
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git add $GITHUB_WORKSPACE/_flashing/LEDdrums.bin
        git add $GITHUB_WORKSPACE/_flashing/LEDdrums_flash.bat
        git add $GITHUB_WORKSPACE/_flashing/LEDdrums_last_build_date.txt
        git add $GITHUB_WORKSPACE/_flashing/LEDremote.bin
        git add $GITHUB_WORKSPACE/_flashing/LEDremote_flash.bat
        git add $GITHUB_WORKSPACE/_flashing/LEDremote_last_build_date.txt
        git add $GITHUB_WORKSPACE/_flashing/LEDctrl.bin
        git add $GITHUB_WORKSPACE/_flashing/LEDctrl_flash.bat
        git add $GITHUB_WORKSPACE/_flashing/LEDctrl_last_build_date.txt
        git commit -m "commit Actions Bot compiled builds"
        git push origin master
        git pull
        git checkout develop
        git merge master
        git push origin develop

    - name: Skip Commit Files
      if: github.ref_name != 'master'
      run: echo "This step is skipped because the branch is not 'master'. Triggering branch: ${{ github.ref_name }}"
