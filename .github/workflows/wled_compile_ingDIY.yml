name: compile ingDIY WLED

on:
    workflow_dispatch:
    push:
      branches:
      - master
      - release/*

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Display triggering branch
      run: |
        echo "Workflow triggered by branch: ${{ github.ref_name }}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Set up Node.js
      uses: actions/setup-node@v4

    - name: Download WLED Base Repository
      id: DOWNLOAD
      run: |
        BRANCH=0_15_x
        mkdir -p /tmp/download
        wget https://github.com/wled/WLED/archive/refs/heads/$BRANCH.zip -O /tmp/download/repo.zip
        unzip /tmp/download/repo.zip -d /tmp/download
        mv /tmp/download/WLED-$BRANCH /tmp/WLED
        echo "PATH=/tmp/WLED" >> $GITHUB_OUTPUT

    - name: Replace PlatformIO Configs
      run: |
        cp ./platformio.ini ${{ steps.DOWNLOAD.outputs.PATH }}
        cp ./platformio_override.ini ${{ steps.DOWNLOAD.outputs.PATH }}

    - name: Install Dependencies
      run: |
        cd ${{ steps.DOWNLOAD.outputs.PATH }}
        npm install

    - name: Build All with PlatformIO
      run: |
        cd ${{ steps.DOWNLOAD.outputs.PATH }}
        platformio run

    - name: Copy Files
      run: |
        mkdir -p $GITHUB_WORKSPACE/_flashing
        cp ${{ steps.DOWNLOAD.outputs.PATH }}/build_output/firmware/* $GITHUB_WORKSPACE/_flashing/

    - name: Add files to GIT
      run: |
        cd $GITHUB_WORKSPACE
        git config user.name "GitHub Actions Bot"
        git config user.email "<actions_bot@github.com>"
        git add $GITHUB_WORKSPACE/_flashing/*

    - name: test TAG
      run: |
        TAG_NAME=$(git describe --tags --abbrev=0)
        BUILD_TAG="${TAG_NAME}_build"
        echo "Creating and pushing tag: $BUILD_TAG"

    - name: Commit files (only from MASTER branch)
      if: github.ref_name == 'master'
      run: |
        # Committing files to MASTER branch...
        cd $GITHUB_WORKSPACE
        git commit -m "commit Actions Bot compiled builds"
        git push origin master

        # getting tag name from the last master branch tag
        TAG_NAME=$(git describe --tags --abbrev=0)
        BUILD_TAG="${TAG_NAME}_build"
        git tag "$BUILD_TAG"
        git push origin "$BUILD_TAG"

        # Merging into DEVELOP branch...
        git pull
        git checkout develop
        git merge master
        git push origin develop

    - name: Build process successfully completed
      run: echo "Build process successfully completed"
